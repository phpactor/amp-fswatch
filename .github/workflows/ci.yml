name: "CI"

on:
    pull_request:
    push:
        branches:
            - 'master'

env:
    fail-fast: true
    TZ: "Europe/Paris"

jobs:
    php-cs-fixer:
        name: "PHP-CS-Fixer (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.3'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v2"

            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: "none"
                    extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
                    php-version: "${{ matrix.php-version }}"
                    tools: composer:v2

            -
                name: "Composer install"
                uses: "ramsey/composer-install@v1"
                with:
                    composer-options: "--no-scripts"

            -
                name: "Run friendsofphp/php-cs-fixer"
                run: "vendor/bin/php-cs-fixer fix --dry-run --diff --verbose --allow-risky=yes"
    phpstan:
        name: "PHPStan (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.3'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v2"

            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: "none"
                    extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
                    php-version: "${{ matrix.php-version }}"
                    tools: composer:v2

            -
                name: "Composer install"
                uses: "ramsey/composer-install@v1"
                with:
                    composer-options: "--no-scripts"

            -
                name: "Run PHPStan"
                run: "vendor/bin/phpstan analyse"
    phpunit:
        name: "PHPUnit (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.3'
                    - '7.4'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v2"
            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: "none"
                    extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
                    php-version: "${{ matrix.php-version }}"
                    tools: composer:v2

            -
                name: "Composer install"
                uses: "ramsey/composer-install@v1"
                with:
                    composer-options: "--no-scripts"
            -
                name: "Install Watchman"
                run: |
                    wget https://github.com/facebook/watchman/releases/download/v2020.09.14.00/watchman-v2020.09.14.00-linux.zip
                    unzip watchman-v2020.09.14.00-linux.zip
                    sudo mkdir -p /usr/local/{bin,lib} /usr/local/var/run/watchman
                    sudo mv watchman-v2020.09.14.00-linux/bin/watchman /usr/local/bin/watchman
                    sudo mv watchman-v2020.09.14.00-linux/lib/* /usr/local/lib/
                    sudo chmod 755 /usr/local/bin/watchman
                    sudo chmod 2777 /usr/local/var/run/watchman
            -
                name: "Install Inotify"
                run: sudo apt-get -y install inotify-tools fswatch
            -
                name: "Run PHPUnit"
                run: "vendor/bin/phpunit"
